create database curso_hml
go

use curso_hml
go

create table Contato
(
    Id        int identity(1,1) primary key,
    Nome      varchar(100) not null,
    SobreNome varchar(100) not null,
    Email     varchar(100) not null
)
go

create table Telefone
(
    Id int identity(1,1) primary key,
    ContatoId integer,
    Numero varchar(100) not null,
    FOREIGN KEY (ContatoId) REFERENCES Contato(Id)
)
go

create table Usuario
(
    Id    int identity(1,1) primary key,
    Email varchar(100) not null,
    Senha varchar(100) not null
)
go

create table Operacao
(
	Id     int primary key,
	Titulo varchar(100) not null
)
go

create table Funcionalidade
(
	Id     int primary key,
	Titulo varchar(100) not null
)
go

create table Permissao
(
    Id int identity(1,1) primary key,
    UsuarioId integer not null,
    FuncionalidadeId integer not null,
	OperacaoId integer not null,
	Valor char(1) not null,
	CONSTRAINT chk_valor CHECK (Valor in ('s','n')),
    FOREIGN KEY (UsuarioId) REFERENCES Usuario(Id),
	FOREIGN KEY (FuncionalidadeId) REFERENCES Funcionalidade(Id),
	FOREIGN KEY (OperacaoId) REFERENCES Operacao(Id),
	CONSTRAINT uq_permissao UNIQUE NONCLUSTERED (UsuarioId, FuncionalidadeId, OperacaoId)
)
go

insert into Operacao (Id, Titulo) values (1, 'Criar'), (2, 'Consultar'), (3, 'Atualizar'), (4, 'Excluir')
go
insert into Funcionalidade (Id, Titulo) values (1, 'Permissao'), (2, 'Contato'), (3, 'Telefone')
go
insert into Usuario (Email, Senha) values ('root@root.com', '$2a$11$Yy0eStMCUoWCxjrBJbBOHuvfWeWqtsgGUDyGIF8cf.M6yZ9/nBMSK');
go
insert into Permissao (UsuarioId, FuncionalidadeId, OperacaoId, Valor) values (1, 1, 1, 's'),(1, 1, 2, 's'),(1, 1, 3, 's'),(1, 1, 4, 's')
go

select
f.Titulo + '-' + o.Titulo as Nome, 
coalesce(p.Valor, 'n') as Valor
from Funcionalidade f 
join Permissao p on f.Id = p.FuncionalidadeId
join Operacao o on o.Id = p.OperacaoId
join Usuario u on u.Id = p.UsuarioId